/**
 * Autogenerated by Avro (Gerado automaticamente por Avro).
 *
 * DO NOT EDIT DIRECTLY
 */
package flauzo.cruz.avro.boleto;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class BoletoAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {

  private static final long serialVersionUID = 7054352690692222975L;

  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BoletoAvro\",\"namespace\":\"flauzo.cruz.avro.boleto\",\"fields\":[{\"name\":\"uuid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"linhaDigitavel\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"valor\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"numeroDocumento\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"beneficiario\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dataVencimento\",\"type\":\"string\",\"default\":\"\"}]}");

  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  private static final BinaryMessageEncoder<BoletoAvro> ENCODER =
      new BinaryMessageEncoder<BoletoAvro>(MODEL$, SCHEMA$);
  private static final BinaryMessageDecoder<BoletoAvro> DECODER =
      new BinaryMessageDecoder<BoletoAvro>(MODEL$, SCHEMA$);

  /**
   * Retorna a instância BinaryMessageEncoder usada por esta classe.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BoletoAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Retorna a instância BinaryMessageDecoder usada por esta classe.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BoletoAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Crie uma nova instância BinaryMessageDecoder para esta classe que usa o {@link SchemaStore} especificado.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BoletoAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BoletoAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializa este BoletoAvro para um ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Desserializa um BoletoAvro de um ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BoletoAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BoletoAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence uuid;
  private java.lang.CharSequence linhaDigitavel;
  private java.lang.CharSequence valor;
  private java.lang.CharSequence numeroDocumento;
  private java.lang.CharSequence beneficiario;
  private java.lang.CharSequence dataVencimento;

  /**
   * Construtor padrão. Observe que isso não inicializa campos
   * para seus valores padrão do esquema. Se isso for desejado, então
   * deve-se usar <code>newBuilder()</code>.
   */
  public BoletoAvro() {}

  /**
   * Construtor de todos os argumentos.
   * @param uuid O novo valor para uuid
   * @param linhaDigitavel O novo valor para linhaDigitavel
   * @param valor O novo valor para valor
   * @param numeroDocumento O novo valor para numeroDocumento
   * @param beneficiario O novo valor para beneficiario
   * @param dataVencimento O novo valor para dataVencimento
   */
  public BoletoAvro(java.lang.CharSequence uuid, java.lang.CharSequence linhaDigitavel, java.lang.CharSequence valor, java.lang.CharSequence numeroDocumento, java.lang.CharSequence beneficiario, java.lang.CharSequence dataVencimento) {
    this.uuid = uuid;
    this.linhaDigitavel = linhaDigitavel;
    this.valor = valor;
    this.numeroDocumento = numeroDocumento;
    this.beneficiario = beneficiario;
    this.dataVencimento = dataVencimento;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  
  // Usado pelo DatumWriter. Os aplicativos não devem chamar.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return linhaDigitavel;
    case 2: return valor;
    case 3: return numeroDocumento;
    case 4: return beneficiario;
    case 5: return dataVencimento;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Usado pelo DatumReader. Os aplicativos não devem chamar.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.CharSequence)value$; break;
    case 1: linhaDigitavel = (java.lang.CharSequence)value$; break;
    case 2: valor = (java.lang.CharSequence)value$; break;
    case 3: numeroDocumento = (java.lang.CharSequence)value$; break;
    case 4: beneficiario = (java.lang.CharSequence)value$; break;
    case 5: dataVencimento = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'linhaDigitavel' field.
   * @return The value of the 'linhaDigitavel' field.
   */
  public java.lang.CharSequence getLinhaDigitavel() {
    return linhaDigitavel;
  }

  /**
   * Sets the value of the 'linhaDigitavel' field.
   * @param value the value to set.
   */
  public void setLinhaDigitavel(java.lang.CharSequence value) {
    this.linhaDigitavel = value;
  }

  /**
   * Gets the value of the 'valor' field.
   * @return The value of the 'valor' field.
   */
  public java.lang.CharSequence getValor() {
    return valor;
  }

  /**
   * Sets the value of the 'valor' field.
   * @param value the value to set.
   */
  public void setValor(java.lang.CharSequence value) {
    this.valor = value;
  }

  /**
   * Gets the value of the 'numeroDocumento' field.
   * @return The value of the 'numeroDocumento' field.
   */
  public java.lang.CharSequence getNumeroDocumento() {
    return numeroDocumento;
  }

  /**
   * Sets the value of the 'numeroDocumento' field.
   * @param value the value to set.
   */
  public void setNumeroDocumento(java.lang.CharSequence value) {
    this.numeroDocumento = value;
  }

  /**
   * Gets the value of the 'beneficiario' field.
   * @return The value of the 'beneficiario' field.
   */
  public java.lang.CharSequence getBeneficiario() {
    return beneficiario;
  }

  /**
   * Sets the value of the 'beneficiario' field.
   * @param value the value to set.
   */
  public void setBeneficiario(java.lang.CharSequence value) {
    this.beneficiario = value;
  }

  /**
   * Gets the value of the 'dataVencimento' field.
   * @return The value of the 'dataVencimento' field.
   */
  public java.lang.CharSequence getDataVencimento() {
    return dataVencimento;
  }

  /**
   * Sets the value of the 'dataVencimento' field.
   * @param value the value to set.
   */
  public void setDataVencimento(java.lang.CharSequence value) {
    this.dataVencimento = value;
  }

  /**
   * Cria um novo BoletoAvro RecordBuilder.
   * @return Um novo BoletoAvro RecordBuilder
   */
  public static flauzo.cruz.avro.boleto.BoletoAvro.Builder newBuilder() {
    return new flauzo.cruz.avro.boleto.BoletoAvro.Builder();
  }

  /**
   * Cria um novo BoletoAvro RecordBuilder copiando um Builder existente.
   * @param other O construtor existente a ser copiado.
   * @return Um novo BoletoAvro RecordBuilder
   */
  public static flauzo.cruz.avro.boleto.BoletoAvro.Builder newBuilder(flauzo.cruz.avro.boleto.BoletoAvro.Builder other) {
    if (other == null) {
      return new flauzo.cruz.avro.boleto.BoletoAvro.Builder();
    } else {
      return new flauzo.cruz.avro.boleto.BoletoAvro.Builder(other);
    }
  }

  /**
   * Cria um novo BoletoAvro RecordBuilder copiando uma instância existente do BoletoAvro.
   * @param other A instância existente a ser copiada.
   * @return Um novo BoletoAvro RecordBuilder
   */
  public static flauzo.cruz.avro.boleto.BoletoAvro.Builder newBuilder(flauzo.cruz.avro.boleto.BoletoAvro other) {
    if (other == null) {
      return new flauzo.cruz.avro.boleto.BoletoAvro.Builder();
    } else {
      return new flauzo.cruz.avro.boleto.BoletoAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for BoletoAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BoletoAvro>
    implements org.apache.avro.data.RecordBuilder<BoletoAvro> {

    private java.lang.CharSequence uuid;
    private java.lang.CharSequence linhaDigitavel;
    private java.lang.CharSequence valor;
    private java.lang.CharSequence numeroDocumento;
    private java.lang.CharSequence beneficiario;
    private java.lang.CharSequence dataVencimento;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Cria um Builder copiando um Builder existente.
     * @param other O Builder existente a ser copiado.
     */
    private Builder(flauzo.cruz.avro.boleto.BoletoAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.linhaDigitavel)) {
        this.linhaDigitavel = data().deepCopy(fields()[1].schema(), other.linhaDigitavel);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.valor)) {
        this.valor = data().deepCopy(fields()[2].schema(), other.valor);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.numeroDocumento)) {
        this.numeroDocumento = data().deepCopy(fields()[3].schema(), other.numeroDocumento);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.beneficiario)) {
        this.beneficiario = data().deepCopy(fields()[4].schema(), other.beneficiario);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.dataVencimento)) {
        this.dataVencimento = data().deepCopy(fields()[5].schema(), other.dataVencimento);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Cria um Builder copiando uma instância existente do BoletoAvro
     * @param other A instância existente a ser copiada.
     */
    private Builder(flauzo.cruz.avro.boleto.BoletoAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.linhaDigitavel)) {
        this.linhaDigitavel = data().deepCopy(fields()[1].schema(), other.linhaDigitavel);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.valor)) {
        this.valor = data().deepCopy(fields()[2].schema(), other.valor);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.numeroDocumento)) {
        this.numeroDocumento = data().deepCopy(fields()[3].schema(), other.numeroDocumento);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.beneficiario)) {
        this.beneficiario = data().deepCopy(fields()[4].schema(), other.beneficiario);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dataVencimento)) {
        this.dataVencimento = data().deepCopy(fields()[5].schema(), other.dataVencimento);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }

    /**
      * Define o valor do campo 'uuid'.
      * @param value O valor de 'uuid'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }

    /**
      * Limpa o valor do campo 'uuid'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'linhaDigitavel' field.
      * @return The value.
      */
    public java.lang.CharSequence getLinhaDigitavel() {
      return linhaDigitavel;
    }

    /**
      * Define o valor do campo 'linhaDigitavel'.
      * @param value O valor de 'linhaDigitavel'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder setLinhaDigitavel(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.linhaDigitavel = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'linhaDigitavel' field has been set.
      * @return True if the 'linhaDigitavel' field has been set, false otherwise.
      */
    public boolean hasLinhaDigitavel() {
      return fieldSetFlags()[1];
    }

    /**
      * Limpa o valor do campo 'linhaDigitavel'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder clearLinhaDigitavel() {
      linhaDigitavel = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'valor' field.
      * @return The value.
      */
    public java.lang.CharSequence getValor() {
      return valor;
    }

    /**
      * Define o valor do campo 'valor'.
      * @param value O valor de 'valor'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder setValor(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.valor = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'valor' field has been set.
      * @return True if the 'valor' field has been set, false otherwise.
      */
    public boolean hasValor() {
      return fieldSetFlags()[2];
    }

    /**
      * Limpa o valor do campo 'valor'.
      * @return Este construtor.
      */
    public flauzo.cruz.avro.boleto.BoletoAvro.Builder clearValor() {
      valor = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'numeroDocumento' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumeroDocumento() {
      return numeroDocumento;
    }

    /**
      * Sets the value of the 'numeroDocumento' field.
      * @param value The value of 'numeroDocumento'.
      * @return This builder.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder setNumeroDocumento(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.numeroDocumento = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'numeroDocumento' field has been set.
      * @return True if the 'numeroDocumento' field has been set, false otherwise.
      */
    public boolean hasNumeroDocumento() {
      return fieldSetFlags()[3];
    }

    /**
      * Clears the value of the 'numeroDocumento' field.
      * @return This builder.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder clearNumeroDocumento() {
      numeroDocumento = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'beneficiario' field.
      * @return The value.
      */
    public java.lang.CharSequence getBeneficiario() {
      return beneficiario;
    }

    /**
      * Sets the value of the 'beneficiario' field.
      * @param value The value of 'beneficiario'.
      * @return This builder.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder setBeneficiario(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.beneficiario = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'beneficiario' field has been set.
      * @return True if the 'beneficiario' field has been set, false otherwise.
      */
    public boolean hasBeneficiario() {
      return fieldSetFlags()[4];
    }

    /**
      * Limpa o valor do campo 'beneficiario'.
      * @return Este construtor.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder clearBeneficiario() {
      beneficiario = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Obtém o valor do campo 'dataVencimento'.
      * @return O valor.
      */
    public java.lang.CharSequence getDataVencimento() {
      return dataVencimento;
    }

    /**
      * Define o valor do campo 'dataVencimento
      * @param value O valor de 'dataVencimento'.
      * @return Este construtor.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder setDataVencimento(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.dataVencimento = value;

      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Verifica se o campo 'dataVencimento' foi definido.
      * @return True se o campo 'dataVencimento' foi definido, false caso contrário.
      */
    public boolean hasDataVencimento() {
      return fieldSetFlags()[5];
    }

    /**
      * Limpa o valor do campo 'dataVencimento'.
      * @return Este construtor.
      */
    public alpe.bruno.avro.boleto.BoletoAvro.Builder clearDataVencimento() {
      dataVencimento = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BoletoAvro build() {
      try {
        BoletoAvro record = new BoletoAvro();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.linhaDigitavel = fieldSetFlags()[1] ? this.linhaDigitavel : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.valor = fieldSetFlags()[2] ? this.valor : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.numeroDocumento = fieldSetFlags()[3] ? this.numeroDocumento : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.beneficiario = fieldSetFlags()[4] ? this.beneficiario : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.dataVencimento = fieldSetFlags()[5] ? this.dataVencimento : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BoletoAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<BoletoAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BoletoAvro>
    READER$ = (org.apache.avro.io.DatumReader<BoletoAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }
  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.uuid);

    out.writeString(this.linhaDigitavel);

    out.writeString(this.valor);

    out.writeString(this.numeroDocumento);

    out.writeString(this.beneficiario);

    out.writeString(this.dataVencimento);
  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.uuid = in.readString(this.uuid instanceof Utf8 ? (Utf8)this.uuid : null);

      this.linhaDigitavel = in.readString(this.linhaDigitavel instanceof Utf8 ? (Utf8)this.linhaDigitavel : null);

      this.valor = in.readString(this.valor instanceof Utf8 ? (Utf8)this.valor : null);

      this.numeroDocumento = in.readString(this.numeroDocumento instanceof Utf8 ? (Utf8)this.numeroDocumento : null);

      this.beneficiario = in.readString(this.beneficiario instanceof Utf8 ? (Utf8)this.beneficiario : null);

      this.dataVencimento = in.readString(this.dataVencimento instanceof Utf8 ? (Utf8)this.dataVencimento : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.uuid = in.readString(this.uuid instanceof Utf8 ? (Utf8)this.uuid : null);
          break;

        case 1:
          this.linhaDigitavel = in.readString(this.linhaDigitavel instanceof Utf8 ? (Utf8)this.linhaDigitavel : null);
          break;

        case 2:
          this.valor = in.readString(this.valor instanceof Utf8 ? (Utf8)this.valor : null);
          break;

        case 3:
          this.numeroDocumento = in.readString(this.numeroDocumento instanceof Utf8 ? (Utf8)this.numeroDocumento : null);
          break;

        case 4:
          this.beneficiario = in.readString(this.beneficiario instanceof Utf8 ? (Utf8)this.beneficiario : null);
          break;

        case 5:
          this.dataVencimento = in.readString(this.dataVencimento instanceof Utf8 ? (Utf8)this.dataVencimento : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }

      }
    }
  }
}


